* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 62.5%;
    font-family: 'Barlow Condensed', sans-serif;

}

body, 
.head__container { 
    background-color: rgb(0, 0, 0); 
}

.head__container {
    width: 100vw;
    height: 140px;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    position: fixed;

    z-index: 1;
}

.head__logo,
.nav-link,
.line { 
    color: rgb(233, 233, 233); 
}

.head__logo {
    font-size: 3rem;
    font-weight: 400;
    padding: .2em;
    padding-bottom: .5em;
}

.head__nav {
    display: flex;
    flex-direction: row;
}

.nav-link {
    padding: .3em;

    font-size: 2rem;
    font-weight: 100;
    cursor: pointer;

    text-align: right;
    text-decoration: none;

    display: flex;
    flex-direction: column;
    align-items: center;

    transition: 1s;
}


/* ta bort detta om linkarna krånglar samt sätt .head__nav till display block. och  */

/* ON HOVER WHEN NAV IS ON TOP. */
.nav-link::after {
    content: '';
    display: block;
    margin-top: .2em;
    width: 0%;
    height: 1px;
    background-color: rgb(223, 223, 223);
    transition: .2s;
}

.nav-link:hover::after,
.nav-link:focus::after {
    width: 100%;
    transition: .2s;
}

.line {
    height: 1px;
    width: 0;
    margin-left: .5em;

    transform: translateY(-4px);
    display: inline-block;

    background-color: rgb(233, 233, 233);

    transition: .2s;
}

.active-v .line {
    width: 15px;
    transition: .2s;
}


/* GRID */
.grid__container {
    margin: 0 auto;

    display: flex;
    justify-content: center;

    position: relative;
    top: 140px;
}

.grid {
    display: grid;
    gap: 10px;
    grid-auto-flow: dense;

    background-color: transparent;
}

.grid__img {
    width: 100%;
    min-height: 100%;

    object-fit: cover;
    transition: .5s;
}


/* ---------------------------------------------- */
                /* ANIMATION-CLASSES */
/* ---------------------------------------------- */

/* .out/in-v .nav-link has display:block to make them aligned to the right side and not centered which they are otherwise. if this isnt done, the span element .line will lie on top of the text instead of after. .nav-link::after for in/out-v has display:none to not show the after element when nav is on the right side. */

.out-h {
    animation: navFadeOut .3s forwards;
}

.in-h {
    animation: navFadeIn .3s forwards;
}

.in-v {
    display: flex;
    flex-direction: column;
    
    position: fixed;
    top: 10px;
    right: -100px;

    z-index: 10;
}

.in-v .nav-link {
    display: block;
    animation: linkFadeIn .5s forwards;
}

.in-v .nav-link::after {
    display: none;
}

.out-v {
    display: flex;
    flex-direction: column;

    position: fixed;
    top: 10px;
    right: 0px;

    z-index: 10;
}

.out-v .nav-link {
    display: block;
    animation: linkFadeOut .5s forwards;
}

.out-v .nav-link::after {
    display: none;
}

/* ANIMATION-DELAYS FOR LINKS. */
.in-v .nav-link:nth-child(1),
.out-v .nav-link:nth-child(1) {
    animation-delay: 0s;
}
.in-v .nav-link:nth-child(2),
.out-v .nav-link:nth-child(2) {
    animation-delay: .1s;
}
.in-v .nav-link:nth-child(3),
.out-v .nav-link:nth-child(3) {
    animation-delay: .2s;
}
.in-v .nav-link:nth-child(4),
.out-v .nav-link:nth-child(4) {
    animation-delay: .3s;
}
.in-v .nav-link:nth-child(5),
.out-v .nav-link:nth-child(5) {
    animation-delay: .4s;
}

.logo-in-v {
    opacity: 0;
    position: fixed;
    top: 80px;
    left: -100px;
    transform: rotate(-90deg);

    animation: logoIn .4s forwards .7s;
}

.logo-out-v {
    position: fixed;
    top: 80px;
    left: -55px;
    transform: rotate(-90deg);

    animation: logoOut .4s forwards .7s;
}



/* ---------------------------------------------- */
                /* MEDIA QUERYS */
/* ---------------------------------------------- */

@media screen and (min-width: 700px) {
    
    .head__container {
        height: 160px;
    }

    .head__logo {
        font-size: 4rem;
    }

    .nav-link {
        font-size: 2.2rem;
    }

    .grid__container {
        top: 160px;
    }

    .grid {
        grid-template-columns: repeat(3, 1fr);
    }

    .grid__img:hover {
        transform: scale(1.02);
        transition: .5s;
    }

    .medium {
        grid-column: 2 / span 2;
    }

    .big {
        grid-column: 1 / span 2;
        grid-row: 2 / span 2;
    }
}

@media screen and (min-width: 1000px) {

    .head__container {
        position: unset;
    }

    .grid__container {
        padding: 0 10vw;
        z-index: 2;

        top: 0;
    }
}